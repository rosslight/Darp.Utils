# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Test (and publish)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Setup Node.js (needed for Darp.Utils.CodeMirror)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        working-directory: ${{ github.workspace }}/src/Darp.Utils.CodeMirror/js
        run: npm ci

      - name: Restore dependencies
        run:  |
          dotnet tool restore
          dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Format
        run: dotnet csharpier --check .

      - name: Test
        run: dotnet test --no-build --configuration Release
      - name: Upload Test Results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: verify-test-results
          path: |
            **/*.received.*

      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: Get release version
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
          semantic_version: 24.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.semantic.outputs.new_release_published == 'true'
        name: Set .csproj versions
        uses: vers-one/dotnet-project-version-updater@v1.7
        with:
          file: "src/**/*.csproj"
          version: ${{ steps.semantic.outputs.new_release_version }}

      - if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.semantic.outputs.new_release_published == 'true'
        name: Pack and push to nuget.org
        env:
          SKIP_PROJECTS: "Darp.Utils.Messaging.Generator"
        run: |
          for file_name in ./src/**/*.csproj; do
            # Get the base name of the project file, and remove the .csproj extension.
            base_file=$(basename "$file_name")
            project_name="${base_file%.csproj}"

            # Check if the project name is in the SKIP_PROJECTS list.
            if [[ ",$SKIP_PROJECTS," == *",$project_name,"* ]]; then
                echo "Skipping project $project_name"
                continue
            fi
            dotnet pack $file_name --configuration Release --no-restore /p:Version=${{ steps.semantic.outputs.new_release_version }}
          done
          for pkg_name in ./src/**/bin/Release/*.nupkg; do
            dotnet nuget push $pkg_name --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
          done
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.semantic.outputs.new_release_published == 'true'
        name: Semantic Release
        id: release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 24.2.3
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
